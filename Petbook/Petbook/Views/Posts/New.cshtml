@model Petbook.Models.Post

@*this code was taken from this site https://github.com/foliotek/croppie*@
<style>

input[type="file"] {
    cursor: pointer;
}
button:focus {
    outline: 0;
}

.file-btn {
    position: relative;
}
.file-btn input[type="file"] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
}

.upload-demo .upload-demo-wrap,
.upload-demo .upload-result,
.upload-demo.ready .upload-msg {
    display: none;
}
.upload-demo.ready .upload-demo-wrap {
    display: block;
}
.upload-demo.ready .upload-result {
    display: inline-block;    
}
.upload-demo-wrap {
    width: 400px;
    height: 400px;
    margin: 10px auto;
}

.upload-msg {
    text-align: center;
    padding: auto;
    font-size: 22px;
    color: #aaa;
    width: 400px;
    height: 400px;
    margin: 10px auto;
    border: 1px solid #aaa;
}

</style>


<div class="container mt-3">
    <div class="row">
        <div class="col-6 offset-3 border" style="border-radius:0.3rem">

            <ul class="nav nav-tabs mt-3">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/Posts/New">Create a new post</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/BlogPosts/New">Create a new blog post</a>
                </li>
            </ul>
            <br />
             
            @using (Html.BeginForm(actionName: "New", controllerName: "Posts", method: FormMethod.Post))
            {
               <div class="form-group">
                    @Html.LabelFor(model => model.PetId, " Select the pet", new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.PetId, new SelectList(Model.Pets, "Value", "Text"),
                    "Select the pet", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PetId, null, new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(model => model.PostPhoto, " Upload an image", new { @class = "control-label" })

                    <div class="demo-wrap upload-demo">
                        <div id="upload_button">
                            <a class="btn file-btn upload-msg" style="display: flex; align-items: center; justify-content: center;">
                                <span>Upload an image to start cropping</span>
                                <input type="file" id="upload" value="Choose a file" accept="image/*" />
                            </a>
                        </div>
                        <div class="upload-demo-wrap">
                            <div id="upload-demo"></div>
                        </div>    
                    </div>
                    
                    <input id="photob64" type="text" style="display: none" asp-for="PostPhoto"></input>
                    @Html.ValidationMessageFor(model => model.PostPhoto, null, new { @class = "text-danger" })
                </div>
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, " Description", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control summernote" })
                    @Html.ValidationMessageFor(model => model.Description, null, new { @class = "text-danger" })
                </div>
                
                <div class="form-group mt-4">
                    <div class="d-flex col justify-content-between">
                        <a class="btn btn-danger" href="/Posts/Index">Cancel</a>
                        <input type="submit" value="Share" class="btn btn-primary upload-result"/>
                    </div>
                </div>
                <br />
                <br />
            }
            
        </div>
    </div>
</div>

@*this code was taken from this site https://github.com/foliotek/croppie*@
<script>

    var $uploadCrop;

    function readFile(input) {
        console.log("readFile");
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('.upload-demo').addClass('ready');
                $uploadCrop.croppie('bind', {
                    url: e.target.result
                }).then(function () {
                    console.log('jQuery bind complete');
                });

            }

            reader.readAsDataURL(input.files[0]);
        }
        else {
            swal("Sorry - you're browser doesn't support the FileReader API");
        }
    }

    $uploadCrop = $('#upload-demo').croppie({
        viewport: {
            width: 400,
            height: 400,
            type: 'square'
        },
        enableExif: true
    });

    $('#upload').on('change', function () {
        readFile(this);
        $('#upload_button').css('display', 'none');
    });
    $('.upload-result').on('click', function (ev) {
        $uploadCrop.croppie('result', {
            type: 'canvas',
            size: 'viewport'
        }).then(function (resp) {
            if (resp != "data:,") { // this means that the user selected a photo
                $('#photob64').val(resp);
            }
        });
    });

</script>