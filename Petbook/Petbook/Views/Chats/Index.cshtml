@using System.Text.Json;
@using Microsoft.AspNetCore.SignalR;

<style>
    #chat3 .form-control {
        border-color: transparent;
    }

        #chat3 .form-control:focus {
            border-color: transparent;
            box-shadow: inset 0px 0px 0px 1px transparent;
        }

    .badge-dot {
        border-radius: 50%;
        height: 10px;
        width: 10px;
        margin-left: 2.9rem;
        margin-top: -.75rem;
    }
</style>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<div>
    <div class="container py-5">

        <div class="row">
            <div class="col-md-12">

                <div class="card" id="chat3" style="border-radius: 15px;">
                    <div class="card-body">

                        <div class="row">
                            <div class="col-md-6 col-lg-5 col-xl-4 mb-4 mb-md-0">

                                <div class="p-3">

                                    <form method="GET">
                                        <div class="input-group rounded mb-3">
                                            <input type="search" class="form-control rounded" placeholder="Search for User" aria-label="Search"
                                                   aria-describedby="search-addon" name="search" value="@ViewBag.SearchString" />

                                            <button class="btn btn-primary upload-result" style="float: right; border-color:#eab676; background-color: #eab676;" type="submit">Search</button>
                                        </div>
                                    </form>

                                    <div class="overflow-auto vh-80" style="position: relative;">
                                        <ul class="list-unstyled mb-0">
                                            @foreach (var chat in ViewBag.DisplayedChats)
                                            {

                                                @if (chat.UserInChats[0].UserId != ViewBag.currentUser.Id)
                                                {
                                                    <li class="p-2 border-bottom">
                                                        <div class="d-flex flex-row btn" onclick="showChat(@JsonSerializer.Serialize(chat.Messages,new JsonSerializerOptions()
                                                                {
                                                                    MaxDepth = 0,
                                                                    IgnoreNullValues = true,
                                                                    IgnoreReadOnlyProperties = true
                                                                } ), @chat.ChatId,'@ViewBag.CurrentUser.Id', @chat.UserInChats[0].UserId)">
                                                            <div>
                                                                <img src=@chat.UserInChats[0].User.ProfilePhoto
                                                                     alt="avatar" class="d-flex align-self-center me-3" width="60" />
                                                                <span class="badge bg-success badge-dot"></span>
                                                            </div>

                                                            <div class="pt-1">
                                                                <p class="fw-bold mb-0">@chat.UserInChats[0].User.UserName</p>
                                                                <p class="small text-muted">@chat.LastMessage</p>
                                                            </div>
                                                            <div class="pt-1">
                                                                <p class="small text-muted mb-1">@chat.LastMessageTime</p>
                                                            </div>

                                                        </div>
                                                    </li>
                                                }
                                                else
                                                {

                                                    <li class="p-2 border-bottom">

                                                        <div class="d-flex flex-row btn" onclick="showChat(@JsonSerializer.Serialize(chat.Messages, new JsonSerializerOptions()
                                                    {
                                                        MaxDepth = 0,
                                                        IgnoreNullValues = true,
                                                        IgnoreReadOnlyProperties = true
                                                    }), @chat.ChatId, '@ViewBag.CurrentUser.Id', @chat.UserInChats[1].UserId)">
                                                            <div>
                                                                <img src=@chat.UserInChats[1].User.ProfilePhoto
                                                                     alt="avatar" class="d-flex align-self-center me-3" width="60" />
                                                                <span class="badge bg-success badge-dot"></span>
                                                            </div>

                                                            <div class="pt-1">
                                                                <p class="fw-bold mb-0">@chat.UserInChats[1].User.UserName</p>
                                                                <p class="small text-muted">@chat.LastMessage</p>
                                                            </div>
                                                            <div class="pt-1">
                                                                <p class="small text-muted mb-1">@chat.LastMessageTime</p>
                                                            </div>

                                                        </div>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>

                            </div>

                            <div class="col-md-6 col-lg-7 col-xl-8">

                                <div id="chatBox" class="pt-3 pe-3 overflow-auto"
                                     style="position: relative; height: 400px">
                                </div>

                                <div class="text-muted d-flex justify-content-start align-items-center pe-3 pt-3 mt-2">
                                    <img src=" @ViewBag.currentUser.ProfilePhoto"
                                         alt="avatar 3" style="width: 40px; height: 100%;">
                                    <input type="text" class="form-control form-control-lg" id="messageInput"
                                           placeholder="Type message" />
                                    <a class="ms-1 text-muted" href="#!"><i class="fas fa-paperclip"></i></a>
                                    <a class="ms-3 text-muted" href="#!"><i class="fas fa-smile"></i></a>
                                    <a class="ms-3" href="#!"><i class="fas fa-paper-plane"></i></a>
                                    <button onclick="sendMessage('@ViewBag.currentUser.Id')" class="btn btn-primary upload-result" style="float: right; border-color:#eab676; background-color: #eab676;">Send</button>

                                </div>

                            </div>


                        </div>

                    </div>
                </div>

            </div>
        </div>

    </div>
</div>


<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/Chat").build();

    connection.start().catch(err => console.error(err.toString()));

    connection.on("ReceiveMessage", (senderUserId, message) => {
        console.log(`Message from ${senderUserId}: ${message}`);
    });

    const showChat = (messages, chatId, currentUserId, otherUserId) => {



        localStorage.setItem("chatId", chatId);
        l
        $("#chatBox").empty();


        for (let message of messages) {
            console.log(message)
            let contentString = "";
            if (message.UserId === currentUserId)
                contentString += '<div class="d-flex flex-row justify-content-end" >';
            else
                contentString += '<div class="d-flex flex-row justify-content-start" >';
            contentString += '<div> <p class="small p - 2 me - 3 mb - 1 text - white rounded - 3 bg - primary">';
            contentString += message.MessageText;
            contentString += "</p>";
            contentString += '<p class="small me - 3 mb - 3 rounded - 3 text - muted">';
            contentString += message.SendDate;
            contentString += "</p></div></div>";
            $("#chatBox").append(contentString);
        }


    }


    function signalUser(receiverUserId, message) {
        connection.invoke("SendMessage", receiverUserId, message).catch(err => console.error(err.toString()));
    }


    const sendMessage = (senderId) => {



        signalUser("")

        console.log($("#messageInput").val())

        $.post("/Chats/AddMessage/", {
            messageText: $("#messageInput").val(),
            senderId: senderId,
            chatId: localStorage.getItem("chatId")
        }, function (data, status) {
            if (status == "success") {
                if (data == "Yes") {
                    alert("Am trimis");
                } else {

                }
            }
        });
    }


</script>