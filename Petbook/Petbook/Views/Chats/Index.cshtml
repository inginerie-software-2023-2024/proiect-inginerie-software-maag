@using System.Text.Json;
@using Microsoft.AspNetCore.SignalR;

<style>
    #chat3 .form-control {
        border-color: transparent;
    }

        #chat3 .form-control:focus {
            border-color: transparent;
            box-shadow: inset 0px 0px 0px 1px transparent;
        }

    .badge-dot {
        border-radius: 50%;
        height: 10px;
        width: 10px;
        margin-left: 2.9rem;
        margin-top: -.75rem;
    }
</style>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<div>
    <div class="container py-1">

        <div class="row">
            <div class="col-md-12">

                <div class="card" id="chat3" style="border-radius: 15px; height: 80vh">
                    <div class="card-body">

                        <div class="row">
                            <div class="col-md-6 col-lg-5 col-xl-4 mb-4 mb-md-0">

                                <div class="p-1 border-right">

                                    <form method="GET">
                                        <div class="input-group border rounded mb-3">
                                            <input type="search" class="form-control rounded" placeholder="Search for User" aria-label="Search"
                                                   aria-describedby="search-addon" name="search" value="@ViewBag.SearchString" />

                                            <button class="btn btn-primary upload-result" style="float: right; border-color:#eab676; background-color: #eab676;" type="submit">Search</button>
                                        </div>
                                    </form>

                                    <div class="overflow-auto vh-80" style="position: relative;">
                                        <ul class="list-unstyled mb-0">
                                            @foreach (var chat in ViewBag.DisplayedChats)
                                            {

                                                @if (chat.UserInChats[0].UserId != ViewBag.currentUser.Id)
                                                {
                                                    <li class="p-2 border-bottom">
                                                        <div class="d-flex flex-row btn" onclick="showChat(@chat.ChatId,'@ViewBag.CurrentUser.Id', '@chat.UserInChats[0].UserId', '@chat.UserInChats[0].User.ProfilePhoto', '@chat.UserInChats[0].User.UserName')">
                                                            <div>
                                                                <img src=@chat.UserInChats[0].User.ProfilePhoto
                                                                     alt="avatar" class="d-flex align-self-center me-3 rounded" width="60" />
                                                                <span class="badge bg-success badge-dot"></span>
                                                            </div>

                                                            <div class="pt-1">
                                                                <p class="fw-bold text-black-50 mb-0">@chat.UserInChats[0].User.UserName</p>
                                                                <p class="small text-muted">@chat.LastMessage</p>
                                                            </div>
                                                            <div class="pt-1">
                                                                <p class="small text-muted mb-1">@chat.LastMessageTime</p>
                                                            </div>

                                                        </div>
                                                    </li>
                                                }
                                                else
                                                {

                                                    <li class="p-2 border-bottom">

                                                        <div class="d-flex flex-row btn" onclick="showChat(@chat.ChatId, '@ViewBag.CurrentUser.Id', '@chat.UserInChats[1].UserId', '@chat.UserInChats[1].User.ProfilePhoto', '@chat.UserInChats[1].User.UserName')">
                                                            <div>
                                                                <img src=@chat.UserInChats[1].User.ProfilePhoto
                                                                     alt="avatar" class="d-flex align-self-center me-3 rounded" width="60" />
                                                                <span class="badge bg-success badge-dot"></span>
                                                            </div>

                                                            <div class="pt-1">
                                                                <p class="fw-bold text-black-50 mb-0">@chat.UserInChats[1].User.UserName</p>
                                                                <p class="small text-muted">@chat.LastMessage</p>
                                                            </div>
                                                            <div class="pt-1">
                                                                <p class="small text-muted mb-1">@chat.LastMessageTime</p>
                                                            </div>

                                                        </div>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>

                            </div>

                            <div id="chat-div" class="d-none col-md-6 col-lg-7 col-xl-8">
                                <div>
                                    <div class="text-muted d-flex justify-content-start align-items-center p-1">
                                        <img id="receiverPhoto" src="" alt="avatar 3" style="width: 40px; height: 100%;" class="rounded-circle pl-2">
                                        <span id="receiverName" class="mx-2"></span>
                                    </div>
                                </div>

                                <div id="chatBox" class="pt-3 pe-3 overflow-auto border rounded"
                                     style="position: relative; height: 61vh">
                                </div>

                                <div class="border rounded mt-2">
                                    <div class="text-muted d-flex justify-content-start align-items-center p-1">
                                        <img src="@ViewBag.currentUser.ProfilePhoto"
                                             alt="avatar 3" style="width: 40px; height: 100%;" class="rounded">
                                        <input type="text" class="form-control form-control-lg" id="messageInput"
                                               placeholder="Type message" />
                                        <a class="ms-1 text-muted" href="#!"><i class="fas fa-paperclip"></i></a>
                                        <a class="ms-3 text-muted" href="#!"><i class="fas fa-smile"></i></a>
                                        <a class="ms-3" href="#!"><i class="fas fa-paper-plane"></i></a>
                                        <button onclick="sendMessage('@ViewBag.currentUser.Id')" class="btn btn-primary upload-result px-3 mx-4" style="float: right; border-color:#eab676; background-color: #eab676;">Send</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/Chat").build();

    console.log("connection = ", connection);

    connection.start().catch(err => console.error(err.toString()));

    connection.on("ReceiveMessage", (senderUserId, message, date) => {


        if (localStorage.getItem("receiverId") == senderUserId) {
            // Create elements
            var messageDiv = $('<div>').addClass("d-flex flex-row justify-content-start my-2 ms-2");
            var innerDiv = $('<div>').addClass("p-2").css("border-radius", "9px").css("background-color", "#eab676");
            var textDiv = $('<div>').addClass("text-white").css("text-align", "right").text(message);
            var dateDiv = $('<div>').addClass("small text-white-50").css("text-align", "right").text(formatDate(date));

            // Construct the message structure
            innerDiv.append(textDiv).append(dateDiv);
            messageDiv.append(innerDiv);

            // Append to the chat box and scroll
            $("#chatBox").append(messageDiv);
            $("#chatBox").animate({ scrollTop: $("#chatBox").get(0).scrollHeight }, 0);
        }

        console.log(`Message received from ${senderUserId}: ${message}`);
    });

    const formatDate = (dateString) => {
        var date = new Date(dateString);
        var day = ("0" + date.getDate()).slice(-2);
        var month = ("0" + (date.getMonth() + 1)).slice(-2);
        var year = date.getFullYear();
        var hours = ("0" + date.getHours()).slice(-2);
        var minutes = ("0" + date.getMinutes()).slice(-2);

        return day + "." + month + "." + year + ", " + hours + ":" + minutes;
    };

    const showChat = async (chatId, currentUserId, receiverUserId, receiverPhoto, receiverUserName) => {
        localStorage.setItem("chatId", chatId);
        localStorage.setItem("receiverId", receiverUserId);
       
        $('#chat-div').removeClass('d-none');
        $('#receiverPhoto').attr("src", receiverPhoto);
        $('#receiverName').text(receiverUserName);

        $("#chatBox").empty();
        let messages;

        await $.get("/Chats/GetMessages/" + chatId,
        function (data, status) {
            if (status == "success") {
                messages = data;
            }
        });


        for (let message of messages) {
            let contentString = "";
            if (message.userId === currentUserId)
                contentString += '<div class="d-flex flex-row justify-content-end my-2 mx-1"> <div class="p-2" style="border-radius: 9px; background-color: #e8bd89;">';
            else
                contentString += '<div class="d-flex flex-row justify-content-start my-2 ms-2"> <div class="p-2" style="border-radius: 9px; background-color: #eab676">';
            contentString += '<div> <div class="text-white" style="text-align: right;">';
            contentString += message.messageText;
            contentString += "</div>";
            contentString += '<div class="small text-white-50" style="text-align: right">';
            contentString += formatDate(message.sendDate);
            contentString += "</div></div></div></div>";
            $("#chatBox").append(contentString);
            $("#chatBox").animate({ scrollTop: $("#chatBox").get(0).scrollHeight }, 0);
        }
    }

    function signalUser(receiverUserId, message, date) {
        connection.invoke("SendMessage", receiverUserId, message, date).catch(err => console.error(err.toString()));
        console.log(`Message sent to ${receiverUserId}: ${message}`);
    }

    const sendMessage = async (senderId) => {

        const message = $("#messageInput").val();
        let date;

        await $.get("/Chats/GetCurrentDate/", function (data, status) {
            if (status == "success") {
                date = data;
            }
        });

        signalUser(localStorage.getItem("receiverId"), message, date);

        $.post("/Chats/AddMessage/", {
            messageText:message,
            senderId: senderId,
            chatId: localStorage.getItem("chatId"),
            date: date,
        });

        var messageDiv = $('<div>').addClass("d-flex flex-row justify-content-start my-2 ms-2");
        var innerDiv = $('<div>').addClass("p-2").css("border-radius", "9px").css("background-color", "#eab676");
        var textDiv = $('<div>').addClass("text-white").css("text-align", "right").text(message);
        var dateDiv = $('<div>').addClass("small text-white-50").css("text-align", "right").text(formatDate(date));

        // Construct the message structure
        innerDiv.append(textDiv).append(dateDiv);
        messageDiv.append(innerDiv);

        // Append to the chat box and scroll
        $("#chatBox").append(messageDiv);
        $("#chatBox").animate({ scrollTop: $("#chatBox").get(0).scrollHeight }, 0);
    }

</script>